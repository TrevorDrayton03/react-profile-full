/* 
Material Dark Theme
https://m2.material.io/design/color/dark-theme.html#ui-application

Primary:          #BB86FC
PrimaryVariant:   #3700B3
Secondary:        #03DAC6
Background:       #121212
Surface:          #121212
Error:            #CF6679
On Primary:       #000000
On Secondary:     #000000
On Background:    #000000
On Surface:       #FFFFFF
On Error:         #FFFFFF

*/

/* 
Define color variables
*/
:root {
  /* Primary colors */
  --color-primary: #BB86FC;
  --color-primary-variant: #3700B3;

  /* Secondary colors */
  --color-secondary: #03DAC6;

  /* Background colors */
  --color-background: #121212;
  --color-surface: #141414;
  /* #141414. is 10% lighter than #121212 */
  /* Error color */
  --color-error: #CF6679;

  /* Text colors */
  --color-on-primary: #000000;
  --color-on-secondary: #000000;
  --color-on-background: #000000;
  --color-on-surface: #FFFFFF;
  --color-on-error: #FFFFFF;
}

.App {
  display: flex;
  flex: 1;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}


@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 3s ease-in-out;
  }
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

body {
  font-family: 'Roboto', Times, sans-serif;
  font-size: 17px;
  padding: 20px;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  background-color: var(--color-background) !important;
  /* width: 100; */
}

/* prevent horizontal scrollingF */
body,
html {
  overflow-x: hidden;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

.container {
  width: 100%;
  display: flex;
  flex: 1;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 0;
  margin: 0;
}

.navbar {
  margin-top: 15px !important;
  margin-left: 100px !important;
}

.nav-link {
  color: var(--color-on-surface) !important;
  padding: 20px !important;
}

.nav-link:hover {
  color: var(--color-primary) !important;
}

.navbar-nav {
  margin-right: 200px !important;
}

.navbar-toggler {
  color: var(--color-secondary) !important;
  border-color: var(--color-primary) !important;
  margin-right: 200px !important;
}

/* manually (rgba) change color of navbar toggler icon */
.navbar-light .navbar-toggler-icon {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='30' height='30' viewBox='0 0 30 30'%3e%3cpath stroke='rgba(187, 134, 252, 1)' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
}

nav {
  width: 100% !important;
}

svg {
  width: 100%;
  height: 100%;
  display: block;
  margin: 0 auto;
  fill: none;
}

.svg-container {
  position: relative;
}

.text-container {
  position: absolute;
  top: 60%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: var(--color-primary);
  font-family: "Calibre-Medium", "Calibre";
  font-size: 40px;
  font-weight: 400;
}

/* .line1 {
  position: absolute;
  top: 150px;
  left: 0px;
  height: 1px;
  width: 75px;
  background-color: var(--color-on-surface);
} */

.line1 {
  position: absolute;
  top: 245px;
  left: 0px;
  height: 1px;
  width: 65px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: row;
  background-color: var(--color-on-surface);

}

.line1-text {
  position: absolute;
  top: 230px;
  left: 85px;
  font-size: 16px;
  color: var(--color-on-surface);
  display: flex;
  width: 150px;
  height: 45px;
  padding: 5px;
}

.line2 {
  position: absolute;
  top: 200px;
  left: 0px;
  height: 1px;
  width: 30px;
  background-color: var(--color-on-surface);
}

.line2-text {
  position: absolute;
  top: 190px;
  left: 50px;
  font-size: 16px;
  color: var(--color-on-surface);
}

a {
  position: relative;
  bottom: 0;
  transition: bottom 0.3s ease-in-out;
}

/* stops the nav-links*/
a:not(.navbar *):hover {
  stroke: var(--color-primary);
  bottom: 10px;
}

/* stops the nav-brand*/
a:not(.navbar *):hover svg path {
  stroke: var(--color-primary);
}

/* a:hover .navbar * {
  background-image: linear-gradient(rgb(0 0 0/40%) 0 0) !important;
} */

/* polyline and rect are for the svgs */
a:hover polyline {
  stroke: var(--color-primary);
}

a:hover rect {
  stroke: var(--color-primary);
}